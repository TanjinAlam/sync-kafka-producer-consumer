version: "3.3"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    container_name: zookeeper
    networks:
      - broker-kafka
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ALLOW_ANONYMOUS_LOGIN: yes
    volumes:
      - ./bitnami/zookeeper:/bitnami/zookeeper

  kafka:
    image: confluentinc/cp-kafka:6.2.0
    container_name: kafka
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - "9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_HOST_NAME: kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      # KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      # KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      # KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - ./bitnami/kafka:/bitnami/kafka

  kafdrop:
    image: obsidiandynamics/kafdrop
    container_name: kafdrop
    ports:
      - "9000:9000"
    expose:
      - "9000"
    networks:
      - broker-kafka
    environment:
      KAFKA_BROKERCONNECT: "PLAINTEXT://kafka:29092"
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
      SPRING_PROFILES_ACTIVE: "dev"
    depends_on:
      - kafka
      - zookeeper

  consumer:
    container_name: consumer
    build:
      context: ./consumer
      dockerfile: Dockerfile
    environment:
      - KAFKA_TOPIC_NAME=app
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    ports:
      - 8001:8001
    restart: "always"
    depends_on:
      - zookeeper
      - kafka
      - publisher
      - kafdrop
    networks:
      - broker-kafka

  publisher:
    container_name: publisher
    build:
      context: ./producer
      dockerfile: Dockerfile
    environment:
      - KAFKA_TOPIC_NAME=app
      - KAFKA_SERVER=kafka
      - KAFKA_PORT=29092
    ports:
      - 8000:8000
    restart: "always"
    depends_on:
      - zookeeper
      - kafka
      - kafdrop
    networks:
      - broker-kafka
    volumes:
      - ./testproducer:/producer

networks:
  broker-kafka:
    driver: bridge
